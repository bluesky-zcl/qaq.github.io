int query(int x) {
    return a[x] + lazy[block[x]];
}
int main() {
    while(cin>>n) {
        if(n == 0) break;
        memset(a, 0, sizeof a);
        memset(block, 0, sizeof block);
        memset(lazy, 0, sizeof lazy);
        bct = (int)sqrt(n);
        for(int i = 1; i <= n; ++i) block[i] = (i - 1) / bct + 1;
        int cmd, l, r, x;
        for(int i = 1; i <= n; ++i) {
            cin>>l>>r;
            update(l, r, 1);
        }
        for(int i = 1; i <= n; ++i) cout<<query(i)<<" ";
    }
    return 0;
}
```

-----

## 莫队通过分块可以跑的更快

### 按双关键字排序

第一比较级是左端点***所在的块***，第二比较级是右端点

----

# 莫队的思想

用两个指针L,R.他们对应的是所指的数的标号。这样我们可以利用这两个指针进行移动，每次只能向左或向右移动一步。

如图

![](C:\Users\华为\Desktop\tmp.png)

现在左右移动，比如L到L-1，只需要更新上一个新的3，即L-1。

那么L到L+1，我们只需要去除掉当前L的值。因为L+1是已经维护好了的。

R同理，但是要注意方向哦！R到R+1是更新，R到r-1是去除。
